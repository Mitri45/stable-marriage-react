{"version":3,"sources":["routes/submitResults.js","components/RankingList.js","routes/authenticateUser.js","components/UserVerification.js","routes/matchingAlgorithmExec.js","utils/stableMarriage.js","components/StableMarriageMatching.js","App.js","serviceWorker.js","index.js","img/userAvatar.png","img/reorder.svg"],"names":["submitResult","rankedList","currentUser","a","parsedRankedList","forEach","el","index","push","rankedUserEmail","rank","rankingResults","userEmail","email","userRole","role","axios","post","response","status","IconButtonStyled","styled","IconButton","ButtonBlock","Button","ListStyled","List","div","img","h2","RankingList","JSON","parse","localStorage","getItem","useState","localData","state","setState","submitHandler","alert","Container","maxWidth","Typography","variant","component","name","list","setList","onSort","sortUserDataToStore","surname","photo","setItem","stringify","animation","easing","map","item","ListItem","key","alignItems","divider","length","ListItemAvatar","Avatar","alt","src","userAvatar","ListItemText","primary","secondary","Fragment","color","ListItemSecondaryAction","edge","aria-label","onClick","endIcon","Icon","href","removeItem","authenticateUser","get","params","data","UserVerification","setUserEmail","history","useHistory","userNotFound","document","getElementById","handleSubmit","e","style","display","preventDefault","processedEmail","trim","toLocaleLowerCase","validUser","rankingList","id","className","backgroundColor","height","gutterBottom","align","onSubmit","flexDirection","TextField","type","label","required","value","onChange","target","marginTop","Alert","severity","matchingAlgorithmExec","Person","candidateIndex","this","fiance","candidates","p","i","prefers","nextCandidate","engageTo","swapWith","console","log","thisFiance","pFiance","doMarriage","mentorsRankedList","menteesRankedList","menteesPersons","mentorsPersons","menteesCandidates","element","findIndex","mentorsCandidates","mentors","done","mentor","mentee","engageEveryone","mentees","j","isStable","StableMarriageMatching","mentorsRanked","setMentorsRanked","menteesRanked","setMenteesRanked","marriageResults","setMarriageResults","makeMatching","matchingResult","fontSize","padding","_id","App","exact","path","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.aa8d5f1f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function submitResult(rankedList, currentUser) {\r\n  const parsedRankedList = [];\r\n  rankedList.forEach((el, index) => {\r\n    parsedRankedList.push({ rankedUserEmail: el[\"email\"], rank: index });\r\n  });\r\n  const rankingResults = {\r\n    userEmail: currentUser.email,\r\n    userRole: currentUser.role,\r\n    rankedList: parsedRankedList,\r\n  };\r\n  try {\r\n    const response = await axios.post(\"/ranking\", rankingResults);\r\n    return response.status;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport reorderImg from \"../img/reorder.svg\";\r\nimport userAvatar from \"../img/userAvatar.png\";\r\nimport { submitResult } from \"../routes/submitResults\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\n// Styles section with styled-components library (initial adaptation for mobile)\r\n\r\nconst IconButtonStyled = styled(IconButton)`\r\n  cursor: grab;\r\n`;\r\nconst ButtonBlock = styled(Button)`\r\n  display: block;\r\n  width: 240px;\r\n  margin-top: 4em;\r\n`;\r\nconst ListStyled = styled(List)`\r\n  margin-bottom: 2em;\r\n`;\r\n\r\nconst UserCard = styled.div`\r\n  max-height: 100px;\r\n  min-width: 360px;\r\n  border: 1px solid #eeeeee;\r\n  box-shadow: 4px 3px 3px 0px rgb(28 27 33 / 55%);\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  margin-bottom: 1em;\r\n  padding: 1em 0;\r\n  background-color: white;\r\n\r\n  &.sortable-swap-highlight {\r\n    background-color: #f9c7c8;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: move;\r\n    cursor: -webkit-grabbing;\r\n  }\r\n`;\r\nconst StyledImg = styled.img`\r\n  width: 90px;\r\n  height: 90px;\r\n  border-radius: 50%;\r\n  flex: 0 0 auto;\r\n  border: solid 1px #cec4c4;\r\n`;\r\nconst UserName = styled.h2`\r\n  max-width: 150px;\r\n  flex: 1 1 auto;\r\n  font-size: 1.2rem;\r\n  margin: 0 1em;\r\n  overflow-wrap: break-word;\r\n  hyphens: auto;\r\n`;\r\nconst Hamburger = styled.img`\r\n  max-width: 50px;\r\n  min-width: 25px;\r\n  height: 100%;\r\n`;\r\nconst UserRating = styled.div`\r\n  flex: 0 1 auto;\r\n  margin: 0 1em;\r\n\r\n  & p {\r\n    font-size: 1.5em;\r\n    color: red;\r\n  }\r\n`;\r\n\r\n// User list component accept location object with state info about current user and data from GraphQL query\r\nexport default function RankingList() {\r\n  let currentUser = JSON.parse(localStorage.getItem(\"validUser\"));\r\n\r\n  // Make this function stateful with React useState hook\r\n  // If current user already have changed something in ranking list this info should be\r\n  // in local storage. So we take it and make it our initial state by converting it to the object,\r\n  // otherwise use data from GraphQL initial query\r\n  const [state, setState] = useState(() => {\r\n    const localData = localStorage.getItem(\"rankingList\");\r\n    return JSON.parse(localData);\r\n  });\r\n  // Every time moving/dragging triggered in the list - save current order to local storage\r\n  const sortEvent = (el) => {\r\n    let sortUserDataToStore = [];\r\n    state.forEach((el) => {\r\n      sortUserDataToStore.push({\r\n        name: el.name,\r\n        surname: el.surname,\r\n        photo: el.photo,\r\n        email: el.email,\r\n      });\r\n    });\r\n    localStorage.setItem(\"rankingList\", JSON.stringify(sortUserDataToStore));\r\n  };\r\n\r\n  // When we going back to first screen delete all data in local storage to prevent redirect\r\n  const wipeCurrentUserDetails = () => {\r\n    localStorage.removeItem(\"validUser\");\r\n    localStorage.removeItem(\"rankingList\");\r\n  };\r\n\r\n  // organizing and submitting results of raking to somewhere\r\n  const submitHandler = async () => {\r\n    const submitted = await submitResult(state, currentUser);\r\n    if (submitted === 200) {\r\n      alert(\"200\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography variant=\"h4\" component=\"h1\">\r\n        {`Hi, ${currentUser.name}! Please rate this\r\n        ${currentUser.role === \"mentor\" ? \"mentees\" : \"mentors\"}:`}\r\n      </Typography>\r\n      <ListStyled>\r\n        <ReactSortable\r\n          list={state}\r\n          setList={setState}\r\n          onSort={sortEvent}\r\n          animation={200}\r\n          easing=\"cubic-bezier(1, 0, 0, 1)\"\r\n        >\r\n          {state.map((item, index) => (\r\n            <ListItem key={item.email} alignItems=\"flex-start\" divider>\r\n              {item.photo.length === 0 ? (\r\n                <ListItemAvatar>\r\n                  <Avatar alt={item.name} src={userAvatar} />\r\n                </ListItemAvatar>\r\n              ) : (\r\n                <ListItemAvatar>\r\n                  <Avatar alt={item.name} src={item.photo} />\r\n                </ListItemAvatar>\r\n              )}\r\n              <ListItemText\r\n                primary={`${item.name} ${item.surname}`}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      {`Current rank: ${index + 1}`}\r\n                    </Typography>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButtonStyled edge=\"end\" aria-label=\"drag\">\r\n                  <DragIndicatorIcon />\r\n                </IconButtonStyled>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </ReactSortable>\r\n      </ListStyled>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={submitHandler}\r\n        endIcon={<Icon>send</Icon>}\r\n      >\r\n        Submit ranking results\r\n      </Button>\r\n      <ButtonBlock\r\n        color=\"secondary\"\r\n        variant=\"contained\"\r\n        href=\"/\"\r\n        onClick={wipeCurrentUserDetails}\r\n      >\r\n        Choose another account\r\n      </ButtonBlock>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\n// Want to use async/await? Add the `async` keyword to your outer function/method.\r\nexport async function authenticateUser(userEmail) {\r\n  try {\r\n    const response = await axios.get(\"/user\", {\r\n      params: {\r\n        email: userEmail,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { authenticateUser } from \"../routes/authenticateUser\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst UserVerification = () => {\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const history = useHistory();\r\n  const userNotFound = document.getElementById(\"userNotFound\");\r\n  const handleSubmit = async (e) => {\r\n    userNotFound.style.display = \"none\";\r\n    e.preventDefault();\r\n    const processedEmail = userEmail.trim().toLocaleLowerCase();\r\n    const validUser = await authenticateUser(processedEmail);\r\n    if (validUser) {\r\n      localStorage.setItem(\"validUser\", JSON.stringify(validUser[0]));\r\n      const rankingList = [];\r\n      validUser[1].forEach((el) => {\r\n        rankingList.push({\r\n          id: el[\"Order ID\"],\r\n          name: el[\"First Name\"],\r\n          surname: el[\"Last Name\"],\r\n          photo: el[\"A recent photo of yourself\"],\r\n          email: el[\"Email\"],\r\n        });\r\n      });\r\n      localStorage.setItem(\"rankingList\", JSON.stringify(rankingList));\r\n      history.push(\"/ranking\");\r\n    } else {\r\n      const userNotFound = document.getElementById(\"userNotFound\");\r\n      userNotFound.style.display = \"initial\";\r\n    }\r\n  };\r\n  return (\r\n    <Container\r\n      maxWidth=\"sm\"\r\n      className=\"App\"\r\n      style={{\r\n        backgroundColor: \"#cfe8fc\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h3\" gutterBottom align=\"center\">\r\n        Stable marriage app\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n        Please identify yourself with email address you used for register to\r\n        this event:\r\n      </Typography>\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <TextField\r\n          name=\"email\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          id=\"email\"\r\n          label=\"email\"\r\n          required\r\n          value={userEmail}\r\n          onChange={(e) => setUserEmail(e.target.value)}\r\n          style={{ marginTop: \"2em\" }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          style={{ marginTop: \"2em\" }}\r\n        >\r\n          Check the email\r\n        </Button>\r\n\r\n        <Alert\r\n          severity=\"error\"\r\n          id=\"userNotFound\"\r\n          style={{\r\n            display: \"none\",\r\n            marginTop: \"2em\",\r\n          }}\r\n        >\r\n          Sorry, we have not found given email, please try another one\r\n        </Alert>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\nexport default UserVerification;\r\n","import axios from \"axios\";\r\n\r\nexport async function matchingAlgorithmExec() {\r\n  try {\r\n    const response = await axios.get(\"/match\");\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n","function Person(email) {\r\n  let candidateIndex = 0;\r\n\r\n  this.email = email;\r\n  this.fiance = null;\r\n  this.candidates = [];\r\n\r\n  this.rank = function (p) {\r\n    for (let i = 0; i < this.candidates.length; i++)\r\n      if (this.candidates[i] === p) return i;\r\n    return this.candidates.length + 1;\r\n  };\r\n\r\n  this.prefers = function (p) {\r\n    return this.rank(p) < this.rank(this.fiance);\r\n  };\r\n\r\n  this.nextCandidate = function () {\r\n    if (candidateIndex >= this.candidates.length) return null;\r\n    return this.candidates[candidateIndex++];\r\n  };\r\n\r\n  this.engageTo = function (p) {\r\n    if (p.fiance) p.fiance.fiance = null;\r\n    p.fiance = this;\r\n    if (this.fiance) this.fiance.fiance = null;\r\n    this.fiance = p;\r\n  };\r\n\r\n  this.swapWith = function (p) {\r\n    console.log(\"%s & %s swap partners\", this.email, p.email);\r\n    let thisFiance = this.fiance;\r\n    let pFiance = p.fiance;\r\n    this.engageTo(pFiance);\r\n    p.engageTo(thisFiance);\r\n  };\r\n}\r\n\r\nfunction isStable(mentors, mentees) {\r\n  for (let i = 0; i < mentors.length; i++)\r\n    for (let j = 0; j < mentees.length; j++)\r\n      if (mentors[i].prefers(mentees[j]) && mentees[j].prefers(mentors[i]))\r\n        return false;\r\n  return true;\r\n}\r\n\r\nfunction engageEveryone(mentors) {\r\n  let done;\r\n  do {\r\n    done = true;\r\n    for (let i = 0; i < mentors.length; i++) {\r\n      let mentor = mentors[i];\r\n      if (!mentor.fiance) {\r\n        done = false;\r\n        let mentee = mentor.nextCandidate();\r\n        if (!mentee.fiance || mentee.prefers(mentor)) mentor.engageTo(mentee);\r\n      }\r\n    }\r\n  } while (!done);\r\n}\r\n\r\nexport function doMarriage(mentorsRankedList, menteesRankedList) {\r\n  const menteesPersons = mentorsRankedList.map(\r\n    (el) => new Person(el.userEmail)\r\n  );\r\n  const mentorsPersons = menteesRankedList.map(\r\n    (el) => new Person(el.userEmail)\r\n  );\r\n  mentorsRankedList.forEach((el, index) => {\r\n    let i;\r\n    let menteesCandidates = [];\r\n    el.rankedList.forEach((element) => {\r\n      i = mentorsPersons.findIndex(\r\n        ({ email }) => email === element.rankedUserEmail\r\n      );\r\n      menteesCandidates.push(mentorsPersons[i]);\r\n    });\r\n    menteesPersons[index].candidates = menteesCandidates;\r\n  });\r\n\r\n  menteesRankedList.forEach((el, index) => {\r\n    let i;\r\n    let mentorsCandidates = [];\r\n    el.rankedList.forEach((element) => {\r\n      i = menteesPersons.findIndex(\r\n        ({ email }) => email === element.rankedUserEmail\r\n      );\r\n      mentorsCandidates.push(menteesPersons[i]);\r\n    });\r\n    mentorsPersons[index].candidates = mentorsCandidates;\r\n  });\r\n\r\n  console.log(menteesPersons);\r\n  console.log(mentorsPersons);\r\n\r\n  engageEveryone(menteesPersons);\r\n\r\n  for (let i = 0; i < mentorsPersons.length; i++) {\r\n    console.log(\r\n      \"%s is engaged to %s\",\r\n      mentorsPersons[i].email,\r\n      mentorsPersons[i].fiance.email\r\n    );\r\n  }\r\n  for (let i = 0; i < menteesPersons.length; i++) {\r\n    console.log(\r\n      \"%s is engaged to %s\",\r\n      menteesPersons[i].email,\r\n      menteesPersons[i].fiance.email\r\n    );\r\n  }\r\n  console.log(\r\n    \"Stable = %s\",\r\n    isStable(menteesPersons, mentorsPersons) ? \"Yes\" : \"No\"\r\n  );\r\n\r\n  return [mentorsPersons, menteesPersons];\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { matchingAlgorithmExec } from \"../routes/matchingAlgorithmExec\";\r\nimport { doMarriage } from \"../utils/stableMarriage\";\r\n\r\nconst StableMarriageMatching = () => {\r\n  const [mentorsRanked, setMentorsRanked] = useState([]);\r\n  const [menteesRanked, setMenteesRanked] = useState([]);\r\n  const [marriageResults, setMarriageResults] = useState([]);\r\n  const makeMatching = async () => {\r\n    const matchingResult = await matchingAlgorithmExec();\r\n    const mentorsRanked = matchingResult[0];\r\n    const menteesRanked = matchingResult[1];\r\n    const marriageResults = doMarriage(mentorsRanked, menteesRanked);\r\n    setMentorsRanked(mentorsRanked);\r\n    console.log(mentorsRanked);\r\n    setMenteesRanked(menteesRanked);\r\n    console.log(menteesRanked);\r\n    setMarriageResults(marriageResults[0]);\r\n    console.log(marriageResults);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button\r\n        type=\"button\"\r\n        style={{ fontSize: \"1.3rem\", padding: \"1rem\" }}\r\n        onClick={makeMatching}\r\n      >\r\n        Submit\r\n      </button>\r\n      <h2>Mentors ranked by mentees:</h2>\r\n      {mentorsRanked.map((el) => {\r\n        return (\r\n          <div>\r\n            <h3 key={el._id}>{el.userEmail}:</h3>\r\n            <ol>\r\n              {el.rankedList.map((element) => {\r\n                return <li key={element._id}>{element.rankedUserEmail}</li>;\r\n              })}\r\n            </ol>\r\n          </div>\r\n        );\r\n      })}\r\n      <h2>Mentees ranked by mentors:</h2>\r\n\r\n      {menteesRanked.map((el) => {\r\n        return (\r\n          <div>\r\n            <h3 key={el._id}>{el.userEmail}:</h3>\r\n            <ol>\r\n              {el.rankedList.map((element) => {\r\n                return <li key={element._id}>{element.rankedUserEmail}</li>;\r\n              })}\r\n            </ol>\r\n          </div>\r\n        );\r\n      })}\r\n      <h2>Matching pairs:</h2>\r\n      {marriageResults.map((el) => {\r\n        return (\r\n          <div>\r\n            <ul>\r\n              <li key={el.email}>\r\n                {el.email} is engaged with {el.fiance.email}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default StableMarriageMatching;\r\n","import React from \"react\";\nimport RankingList from \"./components/RankingList\";\nimport UserVerification from \"./components/UserVerification\";\nimport StableMarriageMatching from \"./components/StableMarriageMatching\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst validUser = localStorage.getItem(\"validUser\");\n\nfunction App() {\n  return (\n    <>\n      <Route exact path=\"/\">\n        {validUser ? <Redirect to=\"/ranking\" /> : <UserVerification />}\n      </Route>\n      <Route exact path=\"/ranking\">\n        <RankingList />\n      </Route>\n      <Route exact path=\"/matching\">\n        <StableMarriageMatching />\n      </Route>\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/userAvatar.330f6514.png\";","module.exports = __webpack_public_path__ + \"static/media/reorder.eaa32adc.svg\";"],"sourceRoot":""}